import praw
import random
import time
import datetime

#script app

#https://www.reddit.com/prefs/apps
# this is the login information for our bot
username='danny63758'
password='HMBteam4win$'
client_id='h5jlktoKSxblZQ'
client_secret='PWq0RFMwZQwwR0R1WUvjnoazgNQ'
user_agent='dc_bot24'

# connect to reddit 
reddit= praw.Reddit(
    client_id=client_id,
    client_secret=client_secret,
    user_agent=user_agent,
    username=username,
    password=password
    )

# FIXME (task 1): the submission variable should be a praw submission object that
# points to the bot political discussion thread at
# https://www.reddit.com/r/csci040/comments/dw53wt/political_discussion_thread/
# HINT: there is a one-line command in the praw quick-start guide
# that accomplishes this task.

Submission = []
subreddit=reddit.subreddit('csci040')
for submission in subreddit.hot(limit=100):
    Submission.append(submission)
randomsubmission = random.choice(Submission)

#submission=reddit.submission(url='https://www.reddit.com/r/csci040/comments/dw53wt/political_discussion_thread/')

replied_to=[]

#stuff I have posted already 
# in an infinite loop, we will look for comment in the post that we can reply to
while True:
    for submission in subreddit.new():
        
    # printing the current time will help make the output messages more informative
    # since things on reddit vary with time
        #print(submission.title)

        print('new iteration at:',datetime.datetime.now())

    # FIXME (task 2): get a list of all of the comments in the submission

    all_comments = submission.comments.list()
#submission.comments.replace_more(limit=None)
    # HINT1: there is a one-line command in the praw quick-start guide
    # that accomplishes this task.
    # HINT2: whenever we work on a program, you need to somehow check that the
    # things your programming is doing are correct.  In this case, one thing
    # we can do is to check the length of the all_comments variable.
    # You should manually ensure that the printed length is the same as the
    # length displayed on reddit.  If it's not, then there are some comments
    # that you are not correctly identifying, and you need to figure out
    # which comments those are and how to include them.

    print('len(all_comments)=',len(all_comments))
###MISSING SOME COMMENTS DEBUG ME LATER

    # FIXME (task 3): filter all_comments to remove comments that were generated by your bot

    #not_my_comments=[]
    not_my_comments = []
    for comment in all_comments:
        if comment.author != 'danny63758':
            not_my_comments.append(comment)

    # HINT1: completing this task requires only a single for loop and a single if statement.
    # The PRAW quick-start guide has the contents of the for loop/if statement.
    # HINT2: as before, you need to check that your code is working somehow.
    # reddit does not provide any list of comments generated by your bot,
    # but you can easily check this number manually by subtracting the number
    # of comments you know you've posted from the number above.

    #print('len(not_my_comments)=',len(not_my_comments))


    # FIXME (task 4): filter the list to also remove comments that you've already replied to

    comments_without_replies = []
    #reddit.redditor('danny63758').replies(limit=None)
    for comment in not_my_comments:
        if comment.id not in replied_to:
            comments_without_replies.append(comment)

        # HINT1: completing this task requires only a single for loop and a single if statement.
        # The PRAW quick-start guide has the contents of the for loop/if statement.
        # HINT2: again, you need to check that this is working
        
    print('len(comments_without_replies)=',len(comments_without_replies))

        # FIXME (task 5): randomly select one of the comments that we haven't replied to yet
        # HINT: There is a function in python's random module for doing this.
        # See the documentation at https://docs.python.org/3/library/random.html

    comment = random.choice(comments_without_replies)
    #comment.reply('h')
    
        # FIXME (task 6): generate some random text for your comment;
        # your message must clearly identify itself as a bot
        # HINT: This is the same as lab 13.

    #madlibs
    patterns=[
        '<NOUN1> is <VERB> to be <GOODNOUN>! Only <ADJ2> would not vote for <NOUN1>. We <VERB2> make sure that <NOUN2> does not <NOUN3>.---I am a bot',
        '<PEOP> know that <NOUN2> is not <VERB> to be <GOODNOUN>. <NOUN2> is such a <BADNOUN>.---I am a bot',
        'Vote <NOUN1> for 2020! We cannot let <NOUN2>, that <BADNOUN>, get relected.---I am a bot',
        'The <ADJ3> <GOODNOUN> we ever had was <NOUN2>. We need to stop the <DNOUN> from putting <NOUN1> in office. <VERB3> the <NEWS>.---I am a bot',
        'The <RNOUN> are all <ADJ>! Just like <NOUN2> the <BADNOUN>.---I am a bot'
        ]
    

    pattern='Only <NOUN1> is <VERB> to be <GOODNOUN>'

    #replacement keys 
    Noun1=['Pete','Bernie','Williamson','Harris','Bullock',]
    Noun2=['Trump','Pesident Trump','trump','Donald Trump','Donald']
    verb=['fit','qualified','suitable','appropriate','good enough']
    GoodNoun=['president','leader','the President','our president','US president']
    BadNoun=['liar','racist','bigot','traitor','criminal']
    Dnoun=['democracts','liberals','Dems','snowflakes','Blues']
    Rnoun=['republicans','reps','conservatives','Reds','Trump supporters']
    adj=['clowns','racists','crazy','dumb','wackos']
    adj2=['unpatriotic Americans','idiots','crazy people','racists','fools']
    adj3=['greatest','most effective','BEST','most significant','most perfect']
    verb2=['MUST','must','need to','must ensure','have to']
    peop=['We the people','we all','Us Americans','The real citizens','WE']
    verb3=['Stop','Fight','STOP','Shut down','End']
    news=['fake news','FAKE NEWS','media','liberal press','false information']
    Noun3=['win','get reelected','WIN','takeover','beomce president']


    result=pattern.replace('<NOUN1>',Noun1[0])
    result=result.replace('<VERB>',verb[0])
    result=result.replace('<NOUN2>',Noun2[0])
    result=result.replace('<GOODNOUN>',GoodNoun[0])
    result=result.replace('<BADNOUN>',BadNoun[0])
    result=result.replace('<DNOUN>',Dnoun[0])
    result=result.replace('<RNOUN>',Rnoun[0])
    result=result.replace('<ADJ>',adj[0])
    result=result.replace('<ADJ2>',adj2[0])
    result=result.replace('<ADJ3>',adj3[0])
    result=result.replace('<VERB2>',verb2[0])
    result=result.replace('<PEOP>',peop[0])
    result=result.replace('<VERB3>',verb3[0])
    result=result.replace('<NEWS>',news[0])
    result=result.replace('<NOUN3>',Noun3[0])

    
    for i in range(10):
        pattern=random.choice(patterns)
        result=pattern.replace('<NOUN1>',random.choice(Noun1))
        result=result.replace('<VERB>',random.choice(verb))
        result=result.replace('<NOUN2>',random.choice(Noun2))
        result=result.replace('<GOODNOUN>',random.choice(GoodNoun))
        result=result.replace('<BADNOUN>',random.choice(BadNoun))
        result=result.replace('<DNOUN>',random.choice(Dnoun))
        result=result.replace('<RNOUN>',random.choice(Rnoun))
        result=result.replace('<ADJ>',random.choice(adj))
        result=result.replace('<ADJ2>',random.choice(adj2))
        result=result.replace('<ADJ3>',random.choice(adj3))
        result=result.replace('<VERB2>',random.choice(verb2))
        result=result.replace('<PEOP>',random.choice(peop))
        result=result.replace('<VERB3>',random.choice(verb3))
        result=result.replace('<NEWS>',random.choice(news))
        result=result.replace('<NOUN3>',random.choice(Noun3))

    print(type(result))
    comment.reply(result)
    time.sleep(10*60+random.randrange(5*60))
    
    #print('result=',result)
    text= result 
    #text.append(result)

    #text=reddit.submission(url='https://www.reddit.com/r/csci040/comments/dw53wt/political_discussion_thread/')

    print('comment=',comment.body)
    print('result=',result)
    
    
        # FIXME (task 7): post a reply to the selected comment
        # HINT: We covered how to do this in class on 12 Nov.
        # See the reddit.py lecture notes or the PRAW quick start guide.

        # FIXME (task 8): check all submissions in the /r/csci040 subreddit to see if your
        # bot has not created a top-level comment in that submission.  If it has not,
        # then create a top-level comment.
        # HINT1: The PRAW quick-start guide contains all the information you need to know
        # about PRAW to complete this task.
        # HINT2: The code for this task will have to be placed in multiple places throughout
        # this file.

        # sleep for 10-15 minutes so that you don't overload reddit
    commented=False
    top_level_comments = list(submission.comments)
    for comment in top_level_comments:
        if comment.author == 'danny63758':
            commented=True
        if not commented:
            comment.reply(result)
    time.sleep(10*60+random.randrange(5*60))

    ####
    i=0
    #for submission in reddit.subreddit('csci040'):
    for comment in all_comments:
        i+=1
        #print(i,': score=',submission.score,';',submission.title)
        if 'biden' in comment.lower() or 'joe' in comment.lower():
            print('upvoting')
            comment.upvote()
        else:
            print('none')
    ####
